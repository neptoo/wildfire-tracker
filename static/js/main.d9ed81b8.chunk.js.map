{"version":3,"sources":["components/LocationMarker.js","components/LocationInfoBox.js","components/Map.js","components/spin.gif","components/Loader.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["LocationMarker","lat","lng","onClick","className","icon","locationIcon","LocationInfoBox","info","id","title","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","markers","map","ev","categories","geometries","coordinates","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","Loader","src","spinner","alt","Header","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAWeA,EARQ,SAAC,GAA0B,EAAxBC,IAAwB,EAAnBC,IAAoB,IAAfC,EAAc,EAAdA,QAClC,OACE,qBAAKC,UAAU,kBAAkBD,QAASA,EAA1C,SACE,cAAC,IAAD,CAAME,KAAMC,IAAcF,UAAU,qBCQ3BG,EAdS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,sBAAKJ,UAAU,gBAAf,UACE,qDACA,qCACK,iCAASI,EAAKC,QAEnB,wCACQ,iCAASD,EAAKE,eCHtBC,EAAM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAChC,EAAwCC,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAUN,EAAUO,KAAI,SAACC,GAC7B,OAA4B,IAAxBA,EAAGC,WAAW,GAAGZ,GAEjB,cAAC,EAAD,CACER,IAAKmB,EAAGE,WAAW,GAAGC,YAAY,GAClCrB,IAAKkB,EAAGE,WAAW,GAAGC,YAAY,GAClCpB,QAAS,kBAAMc,EAAgB,CAAER,GAAIW,EAAGX,GAAIC,MAAOU,EAAGV,WAIrD,QAET,OACE,sBAAKN,UAAU,MAAf,UACE,cAAC,IAAD,CACEoB,iBAAkB,CAAEC,IAAK,2CACzBC,cAAeb,EACfc,YAAab,EAHf,SAKGI,IAEFF,GAAgB,cAAC,EAAD,CAAiBR,KAAMQ,QAK9CL,EAAIiB,aAAe,CACjBf,OAAQ,CACNZ,IAAK,QACLC,KAAM,UAIRY,KAAM,GAGOH,QC3CA,MAA0B,iCCW1BkB,EATO,WACpB,OACE,sBAAKzB,UAAU,SAAf,UACE,qBAAK0B,IAAKC,EAASC,IAAI,YACvB,uDCQSC,EAXA,WACb,OACE,wBAAQ7B,UAAU,SAAlB,SACE,+BACE,cAAC,IAAD,CAAMC,KAAMC,MADd,0CC0BS4B,MA3Bf,WACE,MAAkCnB,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBuB,EAAlB,KACA,EAA8BpB,oBAAS,GAAvC,mBAAOqB,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,qBAAU,YACS,uCAAG,gCAAAC,EAAA,6DAClBF,GAAW,GADO,SAEAG,MAChB,mDAHgB,cAEZC,EAFY,gBAKOA,EAAIC,OALX,gBAKVC,EALU,EAKVA,OAERR,EAAaQ,GACbN,GAAW,GARO,4CAAH,qDAUjBO,KAGC,IAED,gCACE,cAAC,EAAD,IACER,EAA0C,cAAC,EAAD,IAAhC,cAAC,EAAD,CAAKxB,UAAWA,QCfnBiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d9ed81b8.chunk.js","sourcesContent":["import Icon from \"@iconify/react\";\r\nimport locationIcon from \"@iconify/icons-mdi/fire-alert\";\r\n\r\nconst LocationMarker = ({ lat, lng, onClick }) => {\r\n  return (\r\n    <div className=\"location-marker\" onClick={onClick}>\r\n      <Icon icon={locationIcon} className=\"location-icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationMarker;\r\n","const LocationInfoBox = ({ info }) => {\r\n  return (\r\n    <div className=\"location-info\">\r\n      <h2>Event Location Info</h2>\r\n      <li>\r\n        ID:<strong>{info.id}</strong>\r\n      </li>\r\n      <li>\r\n        TITLE:<strong>{info.title}</strong>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LocationInfoBox;\r\n","import { useState } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport LocationMarker from \"./LocationMarker\";\r\nimport LocationInfoBox from \"./LocationInfoBox\";\r\n\r\nconst Map = ({ eventData, center, zoom }) => {\r\n  const [locationInfo, setLocationInfo] = useState(null);\r\n  const markers = eventData.map((ev) => {\r\n    if (ev.categories[0].id === 8) {\r\n      return (\r\n        <LocationMarker\r\n          lat={ev.geometries[0].coordinates[1]}\r\n          lng={ev.geometries[0].coordinates[0]}\r\n          onClick={() => setLocationInfo({ id: ev.id, title: ev.title })}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  });\r\n  return (\r\n    <div className=\"map\">\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: \"AIzaSyBs7JTohIOxxWEssaSSx_R4QjYjOtTlfq4\" }}\r\n        defaultCenter={center}\r\n        defaultZoom={zoom}\r\n      >\r\n        {markers}\r\n      </GoogleMapReact>\r\n      {locationInfo && <LocationInfoBox info={locationInfo} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nMap.defaultProps = {\r\n  center: {\r\n    lat: 42.3265,\r\n    lng: -122.8756,\r\n    // lat: 30.3055,\r\n    // lng: 120.1408\r\n  },\r\n  zoom: 6,\r\n};\r\n\r\nexport default Map;\r\n","export default __webpack_public_path__ + \"static/media/spin.e3e722d7.gif\";","import spinner from './spin.gif'\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <img src={spinner} alt='Loading' />\r\n      <h1>Fetching Data ...</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader","import Icon from \"@iconify/react\";\r\nimport locationIcon from \"@iconify/icons-mdi/fire-alert\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>\r\n        <Icon icon={locationIcon} />\r\n        Wildfire Tracker(Powered by NASA)\r\n      </h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\nimport Map from \"./components/Map\";\nimport Loader from \"./components/Loader\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      const res = await fetch(\n        \"https://eonet.sci.gsfc.nasa.gov/api/v2.1/events\"\n      );\n      const { events } = await res.json();\n\n      setEventData(events);\n      setLoading(false);\n    };\n    fetchEvents();\n\n    // console.log(eventData);\n  }, []);\n  return (\n    <div>\n      <Header />\n      {!loading ? <Map eventData={eventData} /> : <Loader />}      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}